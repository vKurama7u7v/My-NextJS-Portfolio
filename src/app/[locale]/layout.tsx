import type { Metadata } from 'next'
import './styles.css'
import './globals.css'
import MainProvider from '@/common/provider/main-provider'
import { ThemeProvider } from '@/common/provider/theme-provider'

import { Outfit, DM_Sans, Mulish, Fira_Code } from 'next/font/google'

import { NextIntlClientProvider, hasLocale } from 'next-intl'
import { notFound } from 'next/navigation'
import { routing } from '@/i18n/routing'

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

const outfit = Outfit({
  variable: '--font-dm-sans',
  subsets: ['latin'],
})

const dmSans = DM_Sans({
  variable: '--font-dm-sans',
  subsets: ['latin'],
})

const mulish = Mulish({
  variable: '--font-mulish',
  subsets: ['latin'],
})

const firaCode = Fira_Code({
  variable: '--font-fira-code',
  subsets: ['latin'],
})

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode
  params: Promise<{ locale: string }>
}>) {
  const { locale } = await params
  if (!hasLocale(routing.locales, locale)) {
    notFound()
  }

  return (
    <html lang={locale}>
      <body
        className={`${outfit.variable} ${dmSans.variable} ${mulish.variable} ${firaCode.variable} antialiased`}
      >
        <NextIntlClientProvider>
          <MainProvider>
            <ThemeProvider
              attribute="class"
              defaultTheme="system"
              enableSystem
              disableTransitionOnChange
            >
              {children}
            </ThemeProvider>
          </MainProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  )
}

/*

*/
